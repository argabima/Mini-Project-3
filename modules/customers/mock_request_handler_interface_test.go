// Code generated by mockery v2.20.0. DO NOT EDIT.

package customers

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// MockRequestHandlerInterface is an autogenerated mock type for the RequestHandlerInterface type
type MockRequestHandlerInterface struct {
	mock.Mock
}

type MockRequestHandlerInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRequestHandlerInterface) EXPECT() *MockRequestHandlerInterface_Expecter {
	return &MockRequestHandlerInterface_Expecter{mock: &_m.Mock}
}

// Create provides a mock function with given fields: c
func (_m *MockRequestHandlerInterface) Create(c *gin.Context) {
	_m.Called(c)
}

// MockRequestHandlerInterface_Create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Create'
type MockRequestHandlerInterface_Create_Call struct {
	*mock.Call
}

// Create is a helper method to define mock.On call
//   - c *gin.Context
func (_e *MockRequestHandlerInterface_Expecter) Create(c interface{}) *MockRequestHandlerInterface_Create_Call {
	return &MockRequestHandlerInterface_Create_Call{Call: _e.mock.On("Create", c)}
}

func (_c *MockRequestHandlerInterface_Create_Call) Run(run func(c *gin.Context)) *MockRequestHandlerInterface_Create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *MockRequestHandlerInterface_Create_Call) Return() *MockRequestHandlerInterface_Create_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRequestHandlerInterface_Create_Call) RunAndReturn(run func(*gin.Context)) *MockRequestHandlerInterface_Create_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteByID provides a mock function with given fields: c
func (_m *MockRequestHandlerInterface) DeleteByID(c *gin.Context) {
	_m.Called(c)
}

// MockRequestHandlerInterface_DeleteByID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteByID'
type MockRequestHandlerInterface_DeleteByID_Call struct {
	*mock.Call
}

// DeleteByID is a helper method to define mock.On call
//   - c *gin.Context
func (_e *MockRequestHandlerInterface_Expecter) DeleteByID(c interface{}) *MockRequestHandlerInterface_DeleteByID_Call {
	return &MockRequestHandlerInterface_DeleteByID_Call{Call: _e.mock.On("DeleteByID", c)}
}

func (_c *MockRequestHandlerInterface_DeleteByID_Call) Run(run func(c *gin.Context)) *MockRequestHandlerInterface_DeleteByID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *MockRequestHandlerInterface_DeleteByID_Call) Return() *MockRequestHandlerInterface_DeleteByID_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRequestHandlerInterface_DeleteByID_Call) RunAndReturn(run func(*gin.Context)) *MockRequestHandlerInterface_DeleteByID_Call {
	_c.Call.Return(run)
	return _c
}

// Read provides a mock function with given fields: c
func (_m *MockRequestHandlerInterface) Read(c *gin.Context) {
	_m.Called(c)
}

// MockRequestHandlerInterface_Read_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Read'
type MockRequestHandlerInterface_Read_Call struct {
	*mock.Call
}

// Read is a helper method to define mock.On call
//   - c *gin.Context
func (_e *MockRequestHandlerInterface_Expecter) Read(c interface{}) *MockRequestHandlerInterface_Read_Call {
	return &MockRequestHandlerInterface_Read_Call{Call: _e.mock.On("Read", c)}
}

func (_c *MockRequestHandlerInterface_Read_Call) Run(run func(c *gin.Context)) *MockRequestHandlerInterface_Read_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *MockRequestHandlerInterface_Read_Call) Return() *MockRequestHandlerInterface_Read_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRequestHandlerInterface_Read_Call) RunAndReturn(run func(*gin.Context)) *MockRequestHandlerInterface_Read_Call {
	_c.Call.Return(run)
	return _c
}

// ReadByID provides a mock function with given fields: c
func (_m *MockRequestHandlerInterface) ReadByID(c *gin.Context) {
	_m.Called(c)
}

// MockRequestHandlerInterface_ReadByID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ReadByID'
type MockRequestHandlerInterface_ReadByID_Call struct {
	*mock.Call
}

// ReadByID is a helper method to define mock.On call
//   - c *gin.Context
func (_e *MockRequestHandlerInterface_Expecter) ReadByID(c interface{}) *MockRequestHandlerInterface_ReadByID_Call {
	return &MockRequestHandlerInterface_ReadByID_Call{Call: _e.mock.On("ReadByID", c)}
}

func (_c *MockRequestHandlerInterface_ReadByID_Call) Run(run func(c *gin.Context)) *MockRequestHandlerInterface_ReadByID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *MockRequestHandlerInterface_ReadByID_Call) Return() *MockRequestHandlerInterface_ReadByID_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRequestHandlerInterface_ReadByID_Call) RunAndReturn(run func(*gin.Context)) *MockRequestHandlerInterface_ReadByID_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateByID provides a mock function with given fields: c
func (_m *MockRequestHandlerInterface) UpdateByID(c *gin.Context) {
	_m.Called(c)
}

// MockRequestHandlerInterface_UpdateByID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateByID'
type MockRequestHandlerInterface_UpdateByID_Call struct {
	*mock.Call
}

// UpdateByID is a helper method to define mock.On call
//   - c *gin.Context
func (_e *MockRequestHandlerInterface_Expecter) UpdateByID(c interface{}) *MockRequestHandlerInterface_UpdateByID_Call {
	return &MockRequestHandlerInterface_UpdateByID_Call{Call: _e.mock.On("UpdateByID", c)}
}

func (_c *MockRequestHandlerInterface_UpdateByID_Call) Run(run func(c *gin.Context)) *MockRequestHandlerInterface_UpdateByID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *MockRequestHandlerInterface_UpdateByID_Call) Return() *MockRequestHandlerInterface_UpdateByID_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRequestHandlerInterface_UpdateByID_Call) RunAndReturn(run func(*gin.Context)) *MockRequestHandlerInterface_UpdateByID_Call {
	_c.Call.Return(run)
	return _c
}

// getByEmail provides a mock function with given fields: c
func (_m *MockRequestHandlerInterface) getByEmail(c *gin.Context) {
	_m.Called(c)
}

// MockRequestHandlerInterface_getByEmail_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'getByEmail'
type MockRequestHandlerInterface_getByEmail_Call struct {
	*mock.Call
}

// getByEmail is a helper method to define mock.On call
//   - c *gin.Context
func (_e *MockRequestHandlerInterface_Expecter) getByEmail(c interface{}) *MockRequestHandlerInterface_getByEmail_Call {
	return &MockRequestHandlerInterface_getByEmail_Call{Call: _e.mock.On("getByEmail", c)}
}

func (_c *MockRequestHandlerInterface_getByEmail_Call) Run(run func(c *gin.Context)) *MockRequestHandlerInterface_getByEmail_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *MockRequestHandlerInterface_getByEmail_Call) Return() *MockRequestHandlerInterface_getByEmail_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRequestHandlerInterface_getByEmail_Call) RunAndReturn(run func(*gin.Context)) *MockRequestHandlerInterface_getByEmail_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockRequestHandlerInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockRequestHandlerInterface creates a new instance of MockRequestHandlerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockRequestHandlerInterface(t mockConstructorTestingTNewMockRequestHandlerInterface) *MockRequestHandlerInterface {
	mock := &MockRequestHandlerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
