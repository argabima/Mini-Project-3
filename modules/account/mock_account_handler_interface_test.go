// Code generated by mockery v2.20.0. DO NOT EDIT.

package account

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// MockAccountHandlerInterface is an autogenerated mock type for the AccountHandlerInterface type
type MockAccountHandlerInterface struct {
	mock.Mock
}

type MockAccountHandlerInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAccountHandlerInterface) EXPECT() *MockAccountHandlerInterface_Expecter {
	return &MockAccountHandlerInterface_Expecter{mock: &_m.Mock}
}

// Create provides a mock function with given fields: c
func (_m *MockAccountHandlerInterface) Create(c *gin.Context) {
	_m.Called(c)
}

// MockAccountHandlerInterface_Create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Create'
type MockAccountHandlerInterface_Create_Call struct {
	*mock.Call
}

// Create is a helper method to define mock.On call
//   - c *gin.Context
func (_e *MockAccountHandlerInterface_Expecter) Create(c interface{}) *MockAccountHandlerInterface_Create_Call {
	return &MockAccountHandlerInterface_Create_Call{Call: _e.mock.On("Create", c)}
}

func (_c *MockAccountHandlerInterface_Create_Call) Run(run func(c *gin.Context)) *MockAccountHandlerInterface_Create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *MockAccountHandlerInterface_Create_Call) Return() *MockAccountHandlerInterface_Create_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccountHandlerInterface_Create_Call) RunAndReturn(run func(*gin.Context)) *MockAccountHandlerInterface_Create_Call {
	_c.Call.Return(run)
	return _c
}

// Login provides a mock function with given fields: c
func (_m *MockAccountHandlerInterface) Login(c *gin.Context) {
	_m.Called(c)
}

// MockAccountHandlerInterface_Login_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Login'
type MockAccountHandlerInterface_Login_Call struct {
	*mock.Call
}

// Login is a helper method to define mock.On call
//   - c *gin.Context
func (_e *MockAccountHandlerInterface_Expecter) Login(c interface{}) *MockAccountHandlerInterface_Login_Call {
	return &MockAccountHandlerInterface_Login_Call{Call: _e.mock.On("Login", c)}
}

func (_c *MockAccountHandlerInterface_Login_Call) Run(run func(c *gin.Context)) *MockAccountHandlerInterface_Login_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *MockAccountHandlerInterface_Login_Call) Return() *MockAccountHandlerInterface_Login_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccountHandlerInterface_Login_Call) RunAndReturn(run func(*gin.Context)) *MockAccountHandlerInterface_Login_Call {
	_c.Call.Return(run)
	return _c
}

// ReadByUsername provides a mock function with given fields: c
func (_m *MockAccountHandlerInterface) ReadByUsername(c *gin.Context) {
	_m.Called(c)
}

// MockAccountHandlerInterface_ReadByUsername_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ReadByUsername'
type MockAccountHandlerInterface_ReadByUsername_Call struct {
	*mock.Call
}

// ReadByUsername is a helper method to define mock.On call
//   - c *gin.Context
func (_e *MockAccountHandlerInterface_Expecter) ReadByUsername(c interface{}) *MockAccountHandlerInterface_ReadByUsername_Call {
	return &MockAccountHandlerInterface_ReadByUsername_Call{Call: _e.mock.On("ReadByUsername", c)}
}

func (_c *MockAccountHandlerInterface_ReadByUsername_Call) Run(run func(c *gin.Context)) *MockAccountHandlerInterface_ReadByUsername_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *MockAccountHandlerInterface_ReadByUsername_Call) Return() *MockAccountHandlerInterface_ReadByUsername_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccountHandlerInterface_ReadByUsername_Call) RunAndReturn(run func(*gin.Context)) *MockAccountHandlerInterface_ReadByUsername_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockAccountHandlerInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockAccountHandlerInterface creates a new instance of MockAccountHandlerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockAccountHandlerInterface(t mockConstructorTestingTNewMockAccountHandlerInterface) *MockAccountHandlerInterface {
	mock := &MockAccountHandlerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
