// Code generated by mockery v2.20.0. DO NOT EDIT.

package mock_account

import (
	account "crm_service/modules/account"

	mock "github.com/stretchr/testify/mock"
)

// AccountRepoInterface is an autogenerated mock type for the AccountRepoInterface type
type AccountRepoInterface struct {
	mock.Mock
}

// FindByUsername provides a mock function with given fields: username
func (_m *AccountRepoInterface) FindByUsername(username string) (account.Actors, error) {
	ret := _m.Called(username)

	var r0 account.Actors
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (account.Actors, error)); ok {
		return rf(username)
	}
	if rf, ok := ret.Get(0).(func(string) account.Actors); ok {
		r0 = rf(username)
	} else {
		r0 = ret.Get(0).(account.Actors)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(username)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: _a0
func (_m *AccountRepoInterface) Save(_a0 *account.Actors) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*account.Actors) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewAccountRepoInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewAccountRepoInterface creates a new instance of AccountRepoInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAccountRepoInterface(t mockConstructorTestingTNewAccountRepoInterface) *AccountRepoInterface {
	mock := &AccountRepoInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
